
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://hcaqodjylicmppxcbqbh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhjYXFvZGp5bGljbXBweGNicWJoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzgzMDIxNDksImV4cCI6MjA1Mzg3ODE0OX0.h4pO6UShabHNPWC9o_EMbbhOVHsR-fuZQ5-b85hNB4w";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Type definitions
export interface PatientProfile {
  id: string;
  first_name: string | null;
  last_name: string | null;
  email?: string;
  age?: number;
  gender?: string;
  bloodGroup?: string;
  allergies?: string;
  emergencyContact?: string;
  height?: number;
  birthDate?: string;
  foodHabit?: string;
  currentMedicalConditions?: string;
}

// Function to create or update a user role
export async function createUserRole(userId: string, role: string): Promise<any> {
  try {
    // Call the Supabase RPC function to create/update user role
    const { data, error } = await supabase.rpc('upsert_user_role', {
      p_user_id: userId,
      p_role: role
    });

    if (error) {
      console.error('Error creating user role:', error);
      throw error;
    }

    return data;
  } catch (error: any) {
    console.error('Exception in createUserRole:', error);
    throw error;
  }
}

// Function to create or update patient details
export async function createPatientDetails(
  patientId: string,
  age: number,
  gender: string,
  bloodGroup: string,
  allergies: string | null,
  emergencyContact: string,
  height: number | null,
  birthDate: string | null,
  foodHabit: string | null,
  currentMedicalConditions: string | null
): Promise<any> {
  try {
    // Call the Supabase RPC function to create/update patient details
    const { data, error } = await supabase.rpc('upsert_patient_details', {
      p_user_id: patientId,
      p_age: age,
      p_gender: gender,
      p_blood_group: bloodGroup,
      p_allergies: allergies,
      p_emergency_contact: emergencyContact,
      p_height: height,
      p_birth_date: birthDate,
      p_food_habit: foodHabit,
      p_current_medical_conditions: currentMedicalConditions
    });

    if (error) {
      console.error('Error creating patient details:', error);
      throw error;
    }

    return data;
  } catch (error: any) {
    console.error('Exception in createPatientDetails:', error);
    throw error;
  }
}

// Function to fetch patient prescriptions
export async function fetchPatientPrescriptions(patientId: string, doctorId: string): Promise<any[]> {
  try {
    const { data, error } = await supabase.rpc('get_patient_prescriptions', {
      p_patient_id: patientId,
      p_doctor_id: doctorId
    });
    
    if (error) {
      console.error('Error fetching patient prescriptions:', error);
      throw error;
    }
    
    return data || [];
  } catch (error: any) {
    console.error('Exception in fetchPatientPrescriptions:', error);
    throw error;
  }
}

// Function to get doctor patients
export async function getDoctorPatients(doctorId: string): Promise<PatientProfile[]> {
  try {
    const { data, error } = await supabase.rpc('get_doctor_patients', {
      p_doctor_id: doctorId
    });
    
    if (error) {
      console.error('Error fetching doctor patients:', error);
      throw error;
    }
    
    return data as PatientProfile[] || [];
  } catch (error: any) {
    console.error('Exception in getDoctorPatients:', error);
    throw error;
  }
}
